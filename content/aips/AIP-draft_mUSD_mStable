---
aip: <n/a>
title: <Adding mUSD on Aave>
status: WIP
author: Fauve Altman (@ctrlaltf), Alex Scott (@alsco77)
shortDescription: <Aave governance proposal to enable mUSD as a base asset>
discussions: <https://governance.aave.com/t/arc-listing-proposal-of-mstable-assets-musd-and-imusd/2745>
created: <date created on, in ISO 8601 (2021-03-03) format>
updated (*optional): N/A
---

## Simple Summary

If you can't explain it simply, you don't understand it well enough." Provide a simplified and layman-accessible explanation of the AIP.

## Abstract

AIP proposal of mStable asset on Aave: mUSD 

## Motivation
mUSD is a diversified meta-stablecoin that tracks the US dollar. It is available and liquid on Curve and Balancer and is increasingly being integrated across the broader DeFi ecosystem: 1inch, ARCx, Rari Capital, OpenDAO’s Open Market and many more.
mUSD is currently only supported on CREAM’s Iron Bank.

## Specification

Diversification of stablecoin assets: mUSD is a meta-stablecoin with risk minimisation characteristics and censorship resistance. Adding mUSD would decrease aggregate risk in the Aave ecosystem
Once mUSD support is live, ~7M mUSD could be deployed from mStable’s Save v2 contract to seed the market for borrowing, increasing Aave’s TVL.
imUSD would be the first collateral yield bearing asset (pure USD yield) to become available for use on Aave.
Pave the way for future mStable assets on Aave: We have just released mBTC, and intend to release other stablecoins such as mEUR and mETH in future. mUSD and imUSD integration would set the stage for further collaboration between mStable and Aave’s ecosystems in future should that be desirable for the Aavengers.
## Rationale

The rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work, e.g. how the feature is supported in other languages. The rationale may also provide evidence of consensus within the community, and should discuss important objections or concerns raised during discussion.-->

## Test Cases

See implementation

## Implementation

The implementations must be completed before any AIP is given status "Implemented", but it need not be completed before the AIP is "Approved". While there is merit to the approach of reaching consensus on the specification and rationale before writing code, the principle of "rough consensus and running code" is still useful when it comes to resolving many discussions of API details.

## Copyright

Copyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).
